{"version":3,"sources":["ts/App/Views/menu.ts","ts/App/App.ts","ts/index.ts"],"names":[],"mappings":"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","file":"ts.5112f71d.js","sourceRoot":"../src","sourcesContent":["import IMenu from './menuInterface';\nexport default class MenuView implements IMenu {\n    parent: HTMLElement;\n    constructor(parent: HTMLElement) {\n        this.parent = parent;\n    };\n\n    createElement(tag: string, className?: string) {\n        const element = document.createElement(tag);\n        if (className) {\n            element.classList.add(className);\n        }\n        return element;\n    };\n\n    private createMenuWraper(element: HTMLElement){\n        const menu_wraper = this.createElement('div', 'menu');\n        this.createMenuBackground(menu_wraper);\n        this.createBtnBox(menu_wraper);\n        element.appendChild(menu_wraper);\n    };\n       \n    private createMenuBackground(element: HTMLElement){\n        const menu_background = this.createElement('div', 'menu__background');\n        this.createSettingPlayers(menu_background);\n        this.createSettingBox(menu_background);\n        element.appendChild(menu_background);\n    };\n\n    private createBtnBox(element: HTMLElement){\n        const btn_box = this.createElement('div', 'menu__button');\n        const btn_start = this.createElement('button', 'menu__button--start');\n        btn_start.innerText = \"ROZPOCZNIJ GRĘ\";\n        btn_box.append(btn_start);\n        element.appendChild(btn_box);\n    };\n\n    private createSettingPlayers(element: HTMLElement){\n        const setting_players = this.createElement('div', 'setting__players');\n        const setting_players_text = this.createElement('div', 'setting__players--text');\n        setting_players_text.innerText = 'USTAWIENIA GRACZY';\n        setting_players.appendChild(setting_players_text);\n        \n        const players_box = this.createElement('div', 'setting__players--box');\n        const players_box_text = this.createElement('div', 'setting__players--text');\n        players_box_text.innerText = \"IMIONA GRACZY\";\n        const players = this.createElement('div', 'setting__players--players');\n\n        const first_player = this.createElement('div', 'players--one_player');\n        const white = this.createElement('div', 'white_player');\n        white.innerText = 'Białe | Nazwa gracza'\n        const insert_name_first = this.createElement('input', 'insert__name');\n        insert_name_first.setAttribute('type', 'text');\n        insert_name_first.setAttribute('maxlength', '20');\n        insert_name_first.setAttribute('pattern', '[a-zA-Z0-9]{3,20}');\n        first_player.append(white, insert_name_first);\n\n        const second_player = this.createElement('div', 'players--one_player');\n        const black = this.createElement('div', 'black_player');\n        black.innerText = 'Czarne | Nazwa gracza'\n        const insert_name_second = this.createElement('input', 'insert__name');\n        insert_name_second.setAttribute('type', 'text');\n        insert_name_second.setAttribute('maxlength', '20');\n        insert_name_second.setAttribute('pattern', '[a-zA-Z0-9]{3,20}');\n        second_player.append(black, insert_name_second);\n\n        players.append(first_player, second_player);\n        players_box.append(players_box_text, players);\n        setting_players.appendChild(players_box)\n        this.createRadio(setting_players);\n        element.appendChild(setting_players);\n    };\n\n    private createRadio(element: HTMLElement) {\n        const form_radio = this.createElement('form', 'setting__players--form_radio');\n\n        const radio_color = this.createElement('input');\n        radio_color.setAttribute('type','radio');\n        radio_color.setAttribute('id','random color');\n        radio_color.setAttribute('value','random color');\n\n        const label_color = this.createElement('label');\n        label_color.setAttribute('for','random color');\n        label_color.innerText = 'Losowy kolor';\n\n        const radio_move = this.createElement('input');\n        radio_move.setAttribute('type','radio');\n        radio_move.setAttribute('id','possible move');\n        radio_color.setAttribute('value','possible move');\n\n        const label_move = this.createElement('label');\n        label_move.setAttribute('for','possible move');\n        label_move.innerText = 'Pokazuj możliwe posunięcia';\n\n        form_radio.append(radio_color, label_color, radio_move, label_move);\n        element.appendChild(form_radio);\n    };\n\n    private createSettingBox(element: HTMLElement){\n        const setting_box = this.createElement('div', 'setting__box');\n        this.createSettingGame(setting_box);\n        this.createTimeGame(setting_box);\n        element.appendChild(setting_box);\n    };\n\n    private createSettingGame(element: HTMLElement){\n        const setting_game = this.createElement('div', 'setting--game');\n        const setting_text = this.createElement('div', 'setting__game--text');\n        setting_text.innerText ='USTAWIENIA GRY';\n\n        const form_action = this.createElement('form', 'setting__box--form__action');\n        form_action.innerText = \"WARIANT GRY\";\n        const select = this.createElement('select'); \n        select.setAttribute('name', 'game variant');\n        const option_first = this.createElement('option');\n        option_first.setAttribute('value', 'classic');\n        option_first.setAttribute('selected', \"\");\n        option_first.innerText ='Klasyczny';\n        const option_second = this.createElement('option');\n        option_second.setAttribute('value','amateur');\n        option_second.innerText ='Amatorski';\n\n        select.append(option_first, option_second);\n        form_action.appendChild(select);\n        setting_game.append(setting_text, form_action);\n        element.appendChild(setting_game);\n    };\n\n    private createTimeGame(element: HTMLElement){\n        const time_game = this.createElement('div', 'setting--tame');\n        time_game.innerText = 'CZAS GRY'\n        const span_tg = this.createElement('span');\n        span_tg.innerText = 'W MINUTACH';\n        time_game.appendChild(span_tg);\n\n        const slider_box = this.createElement('div', 'setting--slider');\n        const slider = this.createElement('input', 'slider__range');\n        slider.setAttribute('type', 'range');\n        slider.setAttribute('name', 'range_time');\n        slider.setAttribute('min', '2');\n        slider.setAttribute('max', '15');\n        slider.setAttribute('step', '1');\n        slider.setAttribute('value', '5');\n        slider.setAttribute('id', 'range');\n\n        const slider_time = this.createElement('output');\n        slider_time.setAttribute('id', 'range_display');\n        slider_time.setAttribute('name', 'range_display');\n        slider_time.setAttribute('for', 'range_time');\n        slider_time.textContent = `Wybrany czas gry to: ${slider.getAttribute('value')}min`\n        slider_box.append(slider, slider_time);\n        \n        element.append(time_game, slider_box);\n    };\n\n    private createAddEventListner() {\n        const t = document.getElementById('range');\n        t.addEventListener(\"input\", () => {\n            this.addTime();\n        });\n        t.addEventListener(\"change\", () => {\n            this.addTime()\n        });\n    }\n\n    private addTime() {\n        const x = document.querySelector('.slider_box'); \n        const z =x.querySelector('input').value  \n        const y = x.querySelector('output');    \n        y.innerText = `Wybrany czas gry to: ${z}min`;\n    };\n\n    display(){\n        this.createMenuWraper(this.parent);\n       \n        this.createAddEventListner();    \n    };\n};","import BoardModel from './Models/boardModel';\nimport MenuView from './Views/menu';\n\nexport default function App(debug: boolean = false): void {\n    if (debug) console.log('Start Chess App...');\n\n    const root = document.getElementById('root');\n\n    const menu = new MenuView(root);\n    menu.display();\n}","import App from './App/App';\n\nApp(true);"]}