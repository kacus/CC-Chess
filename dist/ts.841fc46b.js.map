{"version":3,"sources":["ts/App/Models/pieces/figureInterface.ts","ts/App/Models/pieces/kingModel.ts","ts/App/Models/pieces/knightModel.ts","ts/App/Models/pieces/pawnModel.ts","ts/App/Models/pieces/rookModel.ts","ts/App/Models/pieces/bishopModel.ts","ts/App/Models/pieces/queenModel.ts","ts/App/Models/pieces/index.ts","ts/App/Models/boardModel.ts","ts/App/Models/savesModels/saveOfCastling.ts","ts/App/Models/savesModels/saveOfMove.ts","ts/App/Views/stageView.ts","ts/App/Views/menu.ts","ts/App/Views/tabsView.ts","ts/App/Views/boardView.ts","ts/App/Controllers/moveSaver.ts","ts/App/Views/movesList.ts","ts/App/Views/endGameView.ts","ts/App/Controllers/boardController.ts","ts/App/App.ts","ts/index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"ts.841fc46b.js","sourceRoot":"../src","sourcesContent":["import { type } from \"os\";\n\nexport enum EColor {\n    Black = 'b',\n    White = 'w'\n};\n\nexport enum EFigureType {\n    Pawn = 'p',\n    Rook = 'r',\n    Bishop = 'b',\n    Knight = 'n',\n    Queen = 'q',\n    King = 'k'\n};\n\nexport type TField = [number, number];\nexport type TListOfVectors = TField[][];\n\n\nexport interface IFigure {\n    readonly color: EColor;\n    readonly name: EFigureType;\n    isMoved: boolean; //is this figure already moved in current game\n    moveVectors: TListOfVectors;\n    attackVectors: TListOfVectors;\n    move(): void;\n    setAsUnmoved(): void;\n};","import { IFigure, EColor, EFigureType, TListOfVectors } from './figureInterface';\n\nexport default class KingModel implements IFigure {\n    public readonly color: EColor;\n    public readonly name: EFigureType;\n    public isMoved: boolean;\n    public moveVectors: TListOfVectors;\n    public attackVectors: TListOfVectors;\n\n    constructor(color: EColor) {\n        this.color = color;\n        this.name = EFigureType.King;\n        this.moveVectors = [\n            [[-1, -1]],\n            [[-1, 0]],\n            [[-1, 1]],\n            [[0, -1]],\n            [[0, 0]],\n            [[0, 1]],\n            [[1, -1]],\n            [[1, 0]],\n            [[1, 1]],\n        ];\n        this.attackVectors = this.moveVectors;\n        this.isMoved = false;\n    }\n\n    public move() {\n        this.isMoved = true;\n    }\n\n    public setAsUnmoved():void {\n        this.isMoved = false;\n    }\n}","import { IFigure, EColor, EFigureType, TListOfVectors } from './figureInterface';\n\nexport default class KnightModel implements IFigure {\n    public readonly color: EColor;\n    public readonly name: EFigureType;\n    public isMoved: boolean;\n    public moveVectors: TListOfVectors;\n    public attackVectors: TListOfVectors;\n\n    constructor(color: EColor) {\n        this.color = color;\n        this.name = EFigureType.Knight;\n        this.moveVectors = [\n            [[-2, -1]],\n            [[-2, 1]],\n            [[-1, 2]],\n            [[-1, -2]],\n            [[1, 2]],\n            [[1, -2]],\n            [[2, -1]],\n            [[2, 1]],\n        ];\n        this.attackVectors = this.moveVectors;\n        this.isMoved = false;\n    }\n\n    public move() {\n        this.isMoved = true;\n    }\n\n    public setAsUnmoved():void {\n        this.isMoved = false;\n    }\n}","import { IFigure, EColor, EFigureType, TListOfVectors } from './figureInterface';\n\nexport default class RookModel implements IFigure {\n    public readonly color: EColor;\n    public readonly name: EFigureType;\n    public isMoved: boolean;\n    public moveVectors: TListOfVectors;\n    public attackVectors: TListOfVectors;\n\n    constructor(color: EColor) {\n        this.color = color;\n        this.name = EFigureType.Pawn;\n        const reverse: number = this.color === EColor.White ? 1 : -1;\n        this.moveVectors = [\n            [[0, 1 * reverse], [0, 2 * reverse]]\n        ];\n        this.attackVectors = [\n            [[1, reverse]],\n            [[-1, reverse]]\n        ];\n        this.isMoved = false;\n    }\n\n    public move() {\n        this.isMoved = true;\n        const reverse: number = this.color === EColor.White ? 1 : -1;\n        this.moveVectors = [\n            [[0, 1 * reverse]]\n        ];\n    }\n\n    public setAsUnmoved(): void {\n        this.isMoved = false;\n        const reverse: number = this.color === EColor.White ? 1 : -1;\n        this.moveVectors = [\n            [[0, 1 * reverse], [0, 2 * reverse]]\n        ];\n    }\n}","import { IFigure, EColor, EFigureType, TListOfVectors } from './figureInterface';\n\nexport default class TowerModel implements IFigure {\n    public readonly color: EColor;\n    public readonly name: EFigureType;\n    public isMoved: boolean;\n    public moveVectors: TListOfVectors;\n    public attackVectors: TListOfVectors;\n\n    constructor(color: EColor) {\n        this.color = color;\n        this.name = EFigureType.Rook;\n        this.moveVectors = [\n            [[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]], //top\n            [[-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0]], //bottom\n            [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7]], //right\n            [[0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7]] //left\n        ];\n        this.attackVectors = this.moveVectors;\n        this.isMoved = false;\n    }\n\n    public move() {\n        this.isMoved = true;\n    }\n\n    public setAsUnmoved():void {\n        this.isMoved = false;\n    }\n}","import { IFigure, EColor, EFigureType, TListOfVectors } from './figureInterface';\n\nexport default class BishopModel implements IFigure {\n    public readonly color: EColor;\n    public readonly name: EFigureType;\n    public isMoved: boolean;\n    public moveVectors: TListOfVectors;\n    public attackVectors: TListOfVectors;\n\n    constructor(color: EColor) {\n        this.color = color;\n        this.name = EFigureType.Bishop;\n        this.moveVectors = [\n            [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7]], //right-bottom\n            [[-1, 1], [-2, 2], [-3, 3], [-4, 4], [-5, 5], [-6, 6], [-7, 7]], //right-top\n            [[-1, -1], [-2, -2], [-3, -3], [-4, -4], [-5, -5], [-6, -6], [-7, -7]], //left-top\n            [[1, -1], [2, -2], [3, -3], [4, -4], [5, -5], [6, -6], [7, -7]], //left-bottom\n        ];\n        this.attackVectors = this.moveVectors;\n        this.isMoved = false;\n    }\n\n    public move() {\n        this.isMoved = true;\n    }\n\n    public setAsUnmoved(): void {\n        this.isMoved = false;\n    }\n}","import { IFigure, EColor, EFigureType, TListOfVectors } from './figureInterface';\n\nexport default class QueenModel implements IFigure {\n    public readonly color: EColor;\n    public readonly name: EFigureType;\n    public isMoved: boolean;\n    public moveVectors: TListOfVectors;\n    public attackVectors: TListOfVectors;\n\n    constructor(color: EColor) {\n        this.color = color;\n        this.name = EFigureType.Queen;\n        this.moveVectors = [\n            [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7]], //right-bottom\n            [[-1, 1], [-2, 2], [-3, 3], [-4, 4], [-5, 5], [-6, 6], [-7, 7]], //right-top\n            [[-1, -1], [-2, -2], [-3, -3], [-4, -4], [-5, -5], [-6, -6], [-7, -7]], //left-top\n            [[1, -1], [2, -2], [3, -3], [4, -4], [5, -5], [6, -6], [7, -7]], //left-bottom\n            [[1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0]], //bottom\n            [[-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0]], //top\n            [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7]], //right\n            [[0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7]] //left\n        ];\n        this.attackVectors = this.moveVectors;\n        this.isMoved = false;\n    }\n\n    public move() {\n        this.isMoved = true;\n    }\n\n    public setAsUnmoved():void {\n        this.isMoved = false;\n    }\n}","import KingModel from './kingModel';\nimport KnightModel from './knightModel';\nimport PawnModel from './pawnModel';\nimport RookModel from './rookModel';\nimport BishopModel from './bishopModel';\nimport QueenModel from './queenModel';\n\nexport {\n    KingModel,\n    KnightModel,\n    PawnModel,\n    RookModel,\n    BishopModel,\n    QueenModel\n}","import { copyFile } from 'fs';\nimport IBoard from './boardInterface';\nimport { IFigure, EColor, TField, EFigureType } from './pieces/figureInterface';\nimport {\n    KingModel,\n    KnightModel,\n    PawnModel,\n    RookModel,\n    BishopModel,\n    QueenModel\n} from './pieces/index';\n\nimport { MoveSaver } from '../Controllers/moveSaver'\nimport SaveOfMove from './savesModels/saveOfMove';\n\n\nexport default class BoardModel implements IBoard {\n    public board: (IFigure | null)[][] = this.setBoard();\n\n    constructor() {\n    }\n\n    public move(start: TField, end: TField): void {\n        const figure = this.get(start);\n        if (figure) {\n            figure.move();\n        }\n        this.set(end, figure);\n        this.resetField(start);\n    }\n\n    public get(pos: TField): (IFigure | null) {\n        return this.board[8 - pos[1]][pos[0] - 1];\n    }\n\n    public set(pos: TField, figure: IFigure | null): void {\n        this.board[8 - pos[1]][pos[0] - 1] = figure;\n    }\n\n    public resetField(pos: TField): void {\n        this.set(pos, null);\n    }\n\n    public possibleMovesFor(pos: TField): TField[] {\n\n        const moves: TField[] = [];\n        const figure = this.get(pos);\n        if (figure === null) {\n            return moves;\n        }\n\n        figure.moveVectors.forEach(vector => {\n            let indexOfMove = 0;\n            while (indexOfMove < vector.length) {\n                const move = vector[indexOfMove];\n\n                const row = pos[0] + move[0];\n                if (row < 1 || row > 8) {\n                    break;\n                }\n\n                const col = pos[1] + move[1];\n                if (col < 1 || col > 8) {\n                    break;\n                }\n\n                const newPos: TField = [row, col];\n\n                if (this.get(newPos) !== null) {\n                    break;\n                }\n\n                //check if move cause 'check'\n                if (!this.simulateMove(figure.color, pos, newPos)) {\n                    break;\n                }\n\n\n                moves.push([row, col]);\n                indexOfMove += 1;\n            }\n        })\n\n        return moves;\n    }\n\n\n    public possibleAttacksFor(pos: TField, moveSaver?: MoveSaver): TField[] {\n\n        \n        const attacks: TField[] = [];\n        const figure = this.get(pos);\n\n\n        if (figure === null) {\n            return attacks;\n        }\n\n\n        figure.attackVectors.forEach(vector => {\n            let indexOfMove = 0;\n            while (indexOfMove < vector.length) {\n                const move = vector[indexOfMove];\n\n                const row = pos[0] + move[0];\n                if (row < 1 || row > 8) {\n                    break;\n                }\n                const col = pos[1] + move[1];\n                if (col < 1 || col > 8) {\n                    break;\n                }\n                const newPos: TField = [row, col];\n                const target = this.get(newPos);\n\n                if (target !== null) {\n                    if (target.color !== figure.color) {\n                        attacks.push([row, col]);\n                    }\n                    break;\n                }\n                indexOfMove += 1;\n            }\n        });\n\n\n        if(moveSaver){\n            const addEnPassantField = moveSaver.isEnPassantPossible(figure, pos, this.deepCopy());\n\n            if(addEnPassantField.length>0){ \n                attacks.push(addEnPassantField[0] as TField);\n            }\n        }\n        \n        return attacks;\n    }\n\n    public setBoard(): (IFigure | null)[][] {\n        return [\n            this.setFirstLine(EColor.Black),\n            this.setPawns(EColor.Black),\n            ...(Array.from({ length: 4 }, _ => Array(8).fill(null))),\n            this.setPawns(EColor.White),\n            this.setFirstLine(EColor.White),\n        ]\n    }\n\n    private setPawns(color: EColor): (IFigure | null)[] {\n        return [...new Array(8)].map(x => new PawnModel(color));\n    }\n\n    private setFirstLine(color: EColor): (IFigure | null)[] {\n        return [\n            new RookModel(color),\n            new KnightModel(color),\n            new BishopModel(color),\n            new QueenModel(color),\n            color === EColor.White ? new KingModel(EColor.White) : new KingModel(EColor.Black),\n            new BishopModel(color),\n            new KnightModel(color),\n            new RookModel(color)\n        ]\n    }\n\n    private deepCopy(): BoardModel {\n        const copy = new BoardModel();\n        copy.board = [];\n        this.board.forEach(line => {\n            const row: (IFigure | null)[] = [];\n            line.forEach(figure => {\n                if (figure) {\n                    const copyOfFigure = Object.assign(Object.create(Object.getPrototypeOf(figure)), figure);\n                    row.push(copyOfFigure);\n                    return;\n                } else {\n                    row.push(null);\n                }\n\n            });\n            copy.board.push(row);\n        });\n        return copy;\n    }\n\n    //Is king in check\n    public isCheck(color: EColor): boolean {\n        for (let y = 1; y <= 8; y++) {\n            for (let x = 1; x <= 8; x++) {\n                const pos: TField = [x, y];\n                const figure = this.get(pos);\n                if (figure && figure.color !== color) {\n                    const attackedFields = this.possibleAttacksFor(pos);\n                    for (let z = 0; z < attackedFields.length; z++) {\n                        const attackedFigure = this.get(attackedFields[z])!;\n                        if (attackedFigure.name === EFigureType.King && attackedFigure.color === color) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    public isCheckMate(color: EColor): boolean {\n        if (!this.isCheck(color)) return false;\n\n        for (let y = 1; y <= 8; y++) {\n            for (let x = 1; x <= 8; x++) {\n                const pos: TField = [x, y];\n                const figure = this.get(pos);\n                if (figure && figure.color === color) {\n                    //check if attack can save king\n                    let attackedFields = this.possibleAttacksFor(pos);\n                    attackedFields = attackedFields.filter(attack => {\n                        return this.simulateMove(color, pos, attack);\n                    });\n                    if (attackedFields.length > 0) return false;\n                    //check if move can save king\n                    const fieldsToMove = this.possibleMovesFor(pos);\n                    if (fieldsToMove.length > 0) return false;\n                }\n            }\n        }\n        console.log('CHECK MATE!');\n        return true;\n    }\n\n    // check if move can be made for given color\n    public simulateMove(color: EColor, from: TField, to: TField): boolean {\n        const copy = this.deepCopy();\n        copy.move(from, to);\n\n        //return false if move will cause 'check', return true otherwise\n        return !copy.isCheck(color);\n    }\n\n\n\n\n\n\n}","import boardView from \"../../Views/boardView\";\nimport boardModel from \"../boardModel\";\nimport { EColor, TField } from \"../pieces/figureInterface\";\nimport ISaveOf from \"./ISaveOf\";\n\nexport default class SaveOfCastling implements ISaveOf {\n    public color: EColor;\n    isKingSide: boolean;\n\n    constructor(color: EColor, isKingSide: boolean) {\n        this.color = color;\n        this.isKingSide = isKingSide;\n    }\n\n    printMove(): string {\n        const color = this.color === EColor.White ? 'White' : 'Black';\n        const sideOfCastling = this.isKingSide ? 'King Side' : 'Queen Side';\n        return `${color} did ${sideOfCastling} Castling!`;\n    }\n    \n    revert(model: boardModel, view: boardView): void {\n        const row = this.color === EColor.White ? 1 : 8;\n\n        const initKingPos: TField = this.isKingSide ? [7, row] : [2, row];\n        const initRookPos: TField = this.isKingSide ? [6, row] : [3, row];\n\n        const newKingPos: TField = [5, row];\n        const newRookPos: TField = this.isKingSide ? [8, row] : [1, row];\n\n        const king = model.get(initKingPos)!;\n        const rook = model.get(initRookPos)!;\n\n        //revert king\n        view.move(initKingPos,newKingPos, king);\n        king.setAsUnmoved();\n        \n        model.set(newKingPos, king);\n        model.resetField(initKingPos);\n\n        //revert rook\n        model.set(newRookPos, rook);\n        model.resetField(initRookPos);\n\n        view.move(initRookPos, newRookPos, rook);\n        rook.setAsUnmoved();\n    }\n}","import {\n  EColor,\n  EFigureType,\n  IFigure,\n  TField,\n} from \"../pieces/figureInterface\";\nimport BoardView from \"../../Views/boardView\";\nimport BoardModel from \"../boardModel\";\nimport ISaveOf from \"./ISaveOf\";\n\nexport default class SaveOfMove implements ISaveOf {\n  private moveFor: EColor;\n  private movedFigure: IFigure;\n  private wasMovedFigureUnmoved: boolean;\n  private from: TField;\n  private to: TField;\n  private attacked?: IFigure;\n  private wasAttackedFigureUnmoved?: boolean;\n  private enemyField?: TField;\n\n  constructor(\n    color: EColor,\n    moved: IFigure,\n    from: TField,\n    to: TField,\n    attacked?: IFigure,\n    enemyField?: TField\n  ) {\n    this.moveFor = color;\n    this.movedFigure = moved;\n    this.from = from;\n    this.to = to;\n    this.wasMovedFigureUnmoved = moved.isMoved;\n    if (attacked) {\n      this.attacked = attacked;\n      this.wasAttackedFigureUnmoved = attacked.isMoved;\n    }\n    if (enemyField) {\n      this.enemyField = enemyField;\n    }\n  }\n\n  public printMove(): string {\n    const color: string =\n      this.movedFigure.color === EColor.White ? \"White\" : \"Black\";\n    let figureName: string = \"\";\n    switch (this.movedFigure.name) {\n      case EFigureType.Pawn:\n        figureName = \"Pawn\";\n        break;\n      case EFigureType.Rook:\n        figureName = \"Rook\";\n        break;\n      case EFigureType.Knight:\n        figureName = \"Knight\";\n        break;\n      case EFigureType.Bishop:\n        figureName = \"Bishop\";\n        break;\n      case EFigureType.Queen:\n        figureName = \"Queen\";\n        break;\n      case EFigureType.King:\n        figureName = \"King\";\n        break;\n    }\n\n    let result = `${color} ${figureName} moved from ${this.fieldToHumanNotation(\n      this.from\n    )} to ${this.fieldToHumanNotation(this.to)}!`;\n    if (this.attacked) {\n      const enemyColor: string =\n        this.attacked.color === EColor.White ? \"White\" : \"Black\";\n      let enemyFigureName: string = \"\";\n      switch (this.attacked.name) {\n        case EFigureType.Pawn:\n          enemyFigureName = \"Pawn\";\n          break;\n        case EFigureType.Rook:\n          enemyFigureName = \"Rook\";\n          break;\n        case EFigureType.Knight:\n          enemyFigureName = \"Knight\";\n          break;\n        case EFigureType.Bishop:\n          enemyFigureName = \"Bishop\";\n          break;\n        case EFigureType.Queen:\n          enemyFigureName = \"Queen\";\n          break;\n        case EFigureType.King:\n          enemyFigureName = \"King\";\n          break;\n      }\n\n      result += ` And destroyed ${enemyColor} ${enemyFigureName}!`;\n    }\n\n    return result;\n  }\n\n  public revert(model: BoardModel, view: BoardView): void {\n    //revert move\n    if (!this.wasMovedFigureUnmoved) {\n      this.movedFigure.setAsUnmoved();\n    }\n    model.set(this.from, this.movedFigure);\n    model.resetField(this.to);\n    view.move(this.to, this.from, this.movedFigure);\n\n    //revert attack\n    if (this.attacked) {\n      if (!this.wasAttackedFigureUnmoved) {\n        this.attacked.setAsUnmoved();\n      }\n      if (this.enemyField) {\n        model.set(this.enemyField, this.attacked);\n        view.setFigureOnField(this.enemyField, this.attacked);\n        model.set(this.to, null);\n        // view.setFigureOnField(this.to,);\n      } else {\n        model.set(this.to, this.attacked);\n        view.setFigureOnField(this.to, this.attacked);\n      }\n    }\n    const color =\n      this.attacked?.color === EColor.Black ? \"last-of-type\" : \"first-of-type\";\n    const figType = this.attacked?.name;\n\n    const getEnumKeyByEnumValue = (myEnum: any, enumValue: string): string => {\n      const keys = Object.keys(myEnum).filter((x) => myEnum[x] == enumValue);\n      return keys.length > 0 ? keys[0] : \"\";\n    };\n\n    if (figType) {\n      const figureName: string = getEnumKeyByEnumValue(EFigureType, figType);\n      const allBeatenFiguresOfType = document.querySelectorAll<HTMLElement>(\n        `.stage:${color} > .game__stage>.figures__list > .${figureName}:not(.${figType})`\n      )!;\n      const array = Array.from(allBeatenFiguresOfType);\n      const lastElement = array[array.length - 1];\n      lastElement.style.filter = \"invert(0.5)\";\n      lastElement.classList.add(`${figType}`);\n    }\n  }\n\n  private fieldToHumanNotation(field: TField): string {\n    let result = `${String.fromCharCode(65 + field[0] - 1)}${field[1]}`;\n\n    return result;\n  }\n\n  public getLastMove() {\n    return {\n      from: this.from,\n      to: this.to,\n      moveFor: this.moveFor,\n    };\n  }\n}\n","import { EColor, EFigureType, IFigure } from \"../Models/pieces/figureInterface\";\n\ntype FigureImage = {\n  color: EColor;\n  name: EFigureType;\n};\n\nexport default class StageView {\n  id: string\n  constructor(id: string){\n    this.id= id;\n  }\n  public init(parent: HTMLElement, color: EColor, player: string) {\n    const playerName = document.createElement(\"div\");\n    const time = document.createElement(\"div\");\n    time.classList.add(\"time\");\n    time.innerText='00:00 min'\n    const figures = document.createElement(\"div\");\n    const game = document.createElement(\"div\");\n    game.classList.add(\"game__stage\");\n    figures.classList.add(\"figures__list\");\n\n    this.createFigure(\"Pawn\", 8, color, figures);\n    this.createFigure(\"Bishop\", 2, color, figures);\n    this.createFigure(\"Knight\", 2, color, figures);\n    this.createFigure(\"Rook\", 2, color, figures);\n    this.createFigure(\"Queen\", 1, color, figures);\n\n    playerName.classList.add(\"player__name\");\n    playerName.innerText = player\n    playerName.id = this.id\n\n    parent.appendChild(game);\n    game.appendChild(playerName);\n    game.appendChild(figures);\n    parent.appendChild(time);\n  }\n\n  private getFigureImage(figure: FigureImage): HTMLElement {\n    const figureImg = document.createElement(\"img\");\n\n    //Map figure to file name\n    const file = figure.color + figure.name;\n\n    figureImg.setAttribute(\"src\", `./static/assets/pieces/kosal/${file}.svg`);\n    figureImg.setAttribute(\"alt\", `${figure.color} ${figure.name}`);\n\n    figureImg.classList.add(\"chessboard__figure__stage\");\n\n    return figureImg;\n  }\n\n  private createFigure(\n    figureType: keyof typeof EFigureType,\n    repeat: number,\n    color: EColor,\n    parent: HTMLDivElement\n  ) {\n    for (let i = 0; i < repeat; i++) {\n      const name = EFigureType[figureType];\n      const figure: FigureImage = { color, name };\n      const figureImage = this.getFigureImage(figure);\n      figureImage.classList.add(EFigureType[figureType].toLowerCase());\n      figureImage.classList.add(figureType+\"\");\n      parent.appendChild(figureImage);\n    }\n  }\n}\n","import IMenu from './menuInterface';\nexport default class MenuView implements IMenu {\n    parent: HTMLElement;\n    constructor(parent: HTMLElement) {\n        this.parent = parent;\n    };\n\n    createElement(tag: string, className?: string) {\n        const element = document.createElement(tag);\n        if (className) {\n            element.classList.add(className);\n        }\n        return element;\n    };\n\n    private createMenuWraper(element: HTMLElement){\n        const menu_wraper = this.createElement('div', 'menu');\n        this.createMenuBackground(menu_wraper);\n        this.createBtnBox(menu_wraper);\n        element.appendChild(menu_wraper);\n    };\n       \n    private createMenuBackground(element: HTMLElement){\n        const menu_background = this.createElement('div', 'menu__background');\n        this.createSettingPlayers(menu_background);\n        this.createSettingBox(menu_background);\n        element.appendChild(menu_background);\n    };\n\n    private createBtnBox(element: HTMLElement){\n        const btn_box = this.createElement('div', 'menu__button');\n        const btn_start = this.createElement('button', 'menu__button--start');\n        btn_start.setAttribute('id', \"menu__button--start\");\n        btn_start.innerText = \"START THE GAME\";\n        btn_box.append(btn_start);\n        element.appendChild(btn_box);\n\n    };\n\n\n    private createSettingPlayers(element: HTMLElement){\n        const setting_players = this.createElement('div', 'setting__players');\n        const setting_players_text = this.createElement('div', 'setting__players--text');\n        setting_players_text.innerText = 'PLAYERS SETTING';\n        setting_players.appendChild(setting_players_text);\n        \n        const players_box = this.createElement('div', 'setting__players--box');\n        const players_box_text = this.createElement('div', 'setting__players--text');\n        players_box_text.innerText = \"PLAYERS NAMES\";\n        const players = this.createElement('div', 'setting__players--players');\n\n        const first_player = this.createElement('div', 'players--one_player');\n        const white = this.createElement('div', 'white_player');\n        white.innerText = \"Black | Player's name\"\n        const insert_name_first = this.createElement('input', 'insert__name') as HTMLInputElement;\n        insert_name_first.setAttribute('type', 'text');\n        insert_name_first.setAttribute('maxlength', '20');\n        insert_name_first.setAttribute('pattern', '[a-zA-Z0-9]{3,20}');\n        first_player.append(white, insert_name_first);\n        insert_name_first.addEventListener('change', ()=>{\n            const element:HTMLInputElement = document.getElementById('first__player')! as HTMLInputElement;\n            element.innerText = insert_name_first.value\n        })\n\n        const second_player = this.createElement('div', 'players--one_player');\n        const black = this.createElement('div', 'black_player');\n        black.innerText = \"White | Player's name\"\n        const insert_name_second = this.createElement('input', 'insert__name') as HTMLInputElement;\n        insert_name_second.setAttribute('type', 'text');\n        insert_name_second.setAttribute('maxlength', '20');\n        insert_name_second.setAttribute('pattern', '[a-zA-Z0-9]{3,20}');\n        second_player.append(black, insert_name_second);\n        insert_name_second.addEventListener('change', ()=>{\n            const element:HTMLInputElement = document.getElementById('second__player')! as HTMLInputElement;\n            element.innerText = insert_name_second.value\n        })\n\n        players.append(first_player, second_player);\n        players_box.append(players_box_text, players);\n        setting_players.appendChild(players_box)\n        this.createRadio(setting_players);\n        element.appendChild(setting_players);\n    };\n\n    private createRadio(element: HTMLElement) {\n        const form_checkbox = this.createElement('form', 'setting__players--form_checkbox');\n\n        const checkbox_move = this.createElement('input');\n        checkbox_move.setAttribute('type','checkbox');\n        checkbox_move.setAttribute('id','possible move');\n        checkbox_move.setAttribute('name','possible move');\n        const span_move = this.createElement('span', 'checkmark');\n\n        const label_move = this.createElement('label', 'checkbox');\n        label_move.setAttribute('for','possible move');\n        label_move.innerText = 'Show possible moves';\n\n        label_move.append(checkbox_move, span_move);\n        form_checkbox.append( label_move);\n\n        element.appendChild(form_checkbox);\n    };\n\n    private createSettingBox(element: HTMLElement){\n        const setting_box = this.createElement('div', 'setting__box');\n        this.createSettingGame(setting_box);\n        this.createTimeGame(setting_box);\n        element.appendChild(setting_box);\n    };\n\n    private createSettingGame(element: HTMLElement){\n        const setting_game = this.createElement('div', 'setting--game');\n        const setting_text = this.createElement('div', 'setting__game--text');\n        setting_text.innerText ='GAME SETTINGS';\n        setting_game.append(setting_text);\n\n        element.appendChild(setting_game);\n    };\n\n    private createTimeGame(element: HTMLElement){\n        const time_game = this.createElement('div', 'setting--tame');\n        time_game.innerText = 'GAME TIME'\n        const span_tg = this.createElement('span');\n        span_tg.innerText = '(IN MINUTES)';\n        time_game.appendChild(span_tg);\n\n        const slider_box = this.createElement('div', 'setting--slider');\n        const slider = this.createElement('input', 'slider__range');\n        slider.setAttribute('type', 'range');\n        slider.setAttribute('name', 'range_time');\n        slider.setAttribute('min', '2');\n        slider.setAttribute('max', '15');\n        slider.setAttribute('step', '1');\n        slider.setAttribute('value', '5');\n        slider.setAttribute('id', 'range');\n\n        const slider_time = this.createElement('output');\n        slider_time.setAttribute('id', 'range_display');\n        slider_time.setAttribute('name', 'range_display');\n        slider_time.setAttribute('for', 'range_time');\n        slider_time.textContent = `Game time is: ${slider.getAttribute('value')} minutes`\n        slider_box.append(slider, slider_time);\n        \n        element.append(time_game, slider_box);\n    };\n\n    private createAddEventListner() {\n        const t = document.getElementById('range')!;\n        t.addEventListener(\"input\", () => {\n            this.addTime();\n        });\n        t.addEventListener(\"change\", () => {\n            this.addTime()\n        });\n    }\n\n    private addTime() {\n        const sliderValue = (<HTMLInputElement>document.getElementById('range')).value;\n        const outputElement = <HTMLElement>document.getElementById('range_display');\n        outputElement.innerText = `Game time is: ${sliderValue} minutes`;\n    };\n\n    display(){\n        this.createMenuWraper(this.parent);\n       \n        this.createAddEventListner();    \n    };\n};\n","import MenuView from \"./menu\";\nimport MovesList from \"./movesList\";\n\nexport default class TabsView {\n  public init(parent: HTMLElement) {\n    const tabContainer = this.createElement(\"div\", \"tab__container\");\n    parent.appendChild(tabContainer);\n    this.createNavigation(tabContainer);\n    this.createTabs(tabContainer);\n  }\n  private createElement(tag: string, className?: string) {\n    const element = document.createElement(tag);\n    if (className) {\n      element.classList.add(className);\n    }\n    return element;\n  }\n  private createNavigation(tabContainer: HTMLElement) {\n    const ul = this.createElement(\"ul\", \"nav\");\n    ul.id = \"nav__tab\";\n    // ul.addEventListener(\"click\", this.onTabClick, false);\n    const li1 = this.createElement(\"li\");\n\n    li1.addEventListener('click', (e)=>{\n      const tab = document.getElementById('moves');\n      const activeTabs = document.querySelectorAll(\".active\");\n      activeTabs.forEach(function (tab) {\n        tab.className = tab.className.replace(\"active\", \"\");\n      });\n      tab?.classList.add('active');\n      const clickedTabs = document.querySelectorAll(\".clicked\");\n      clickedTabs.forEach(function (clicked) {\n        clicked.className = clicked.className.replace(\"clicked\", \"\");\n      });\n      li1.classList.add('clicked')\n\n    })\n\n    const a1 = this.createElement(\"a\");\n    a1.setAttribute(\"href\", \"#moves\");\n    a1.innerText = \"Moves\";\n    const li3 = this.createElement(\"li\", \"active\");\n\n    li3.addEventListener('click', (e)=>{\n      const tab = document.getElementById('game');\n      const activeTabs = document.querySelectorAll(\".active\");\n      activeTabs.forEach(function (tab) {\n        tab.className = tab.className.replace(\"active\", \"\");\n      });\n      tab?.classList.add('active');\n      const clickedTabs = document.querySelectorAll(\".clicked\");\n      clickedTabs.forEach(function (clicked) {\n        clicked.className = clicked.className.replace(\"clicked\", \"\");\n      });\n      li3.classList.add('clicked')\n    })\n\n    const a3 = this.createElement(\"a\");\n    a3.setAttribute(\"href\", \"#game\");\n    a3.innerText = \"Game\";\n    this.addIcons(li1, li3);\n\n    tabContainer.appendChild(ul);\n    ul.appendChild(li1);\n    ul.appendChild(li3);\n    li1.appendChild(a1);\n    li3.appendChild(a3);\n  }\n\n  private createTabs(tabContainer: HTMLElement) {\n    const tabContent = this.createElement(\"div\", \"tab__content\");\n    const tabPane1 = this.createElement(\"div\", \"tab__pane\");\n    tabPane1.id = \"moves\";\n    const tabPane3 = this.createElement(\"div\", \"tab__pane\");\n    tabPane3.classList.add(\"active\");\n    tabPane3.id = \"game\";\n\n    const lastMoveInfo= this.createElement('div', 'last__move__info');\n    lastMoveInfo.id='last__move__info';\n    const undoButtonContainer = this.createElement('div', 'undo__button__container');\n    undoButtonContainer.id='undo__button__container';\n\n    tabContent.appendChild(tabPane1);\n    tabPane1.appendChild(lastMoveInfo);\n    tabPane1.appendChild(undoButtonContainer);\n    tabContent.appendChild(tabPane3);\n    tabContainer.appendChild(tabContent);\n\n    const menu = new MenuView(tabPane3);\n    menu.display();\n  }\n\n  private addIcons(li1: HTMLElement,  li3: HTMLElement) {\n    const movesIcon = this.createElement(\"img\");\n    movesIcon.setAttribute(\"src\", `./static/assets/icons/moves_icon.svg`);\n    li1.appendChild(movesIcon);\n    const gameIcon = this.createElement(\"img\");\n    gameIcon.setAttribute(\"src\", `./static/assets/icons/game_icon.svg`);\n    li3.appendChild(gameIcon);\n  }\n\n}","import IBoard from \"../Models/boardInterface\";\n\nimport BoardModel from \"../Models/boardModel\";\nimport { QueenModel } from \"../Models/pieces\";\n\nimport {\n  EColor,\n  TField,\n  IFigure,\n} from \"../Models/pieces/figureInterface\";\nimport StageView from \"./stageView\";\nimport TabsView from \"./tabsView\";\n\nexport default class BoardView {\n  public init(parent: HTMLElement, clickHandler: (pos: TField) => void): void {\n    const board = document.createElement(\"div\");\n    board.classList.add(\"chessboard\");\n\n    //game stage\n    const stage1 = document.createElement(\"div\");\n    const stage2 = document.createElement(\"div\");\n    const container = document.createElement(\"div\");\n\n    stage1.classList.add(\"stage\");\n    const blackStage = new StageView(\"first__player\");\n    blackStage.init(stage1, EColor.White, \"Player 1\");\n    stage2.classList.add(\"stage\");\n    container.classList.add(\"container\");\n    const gamePanel = document.createElement(\"div\");\n    gamePanel.classList.add(\"game__panel\");\n    gamePanel.id = \"game__panel\";\n    const settingsPanel = document.createElement(\"div\");\n    settingsPanel.classList.add(\"settings__panel\");\n\n    const whiteStage = new StageView(\"second__player\");\n    whiteStage.init(stage2, EColor.Black, \"Player 2\");\n\n    //\n\n    for (let y = 0; y < 8; y++) {\n      for (let x = 0; x < 8; x++) {\n        const field = document.createElement(\"div\");\n\n        field.dataset.x = 1 + x + \"\";\n        field.dataset.y = 8 - y + \"\";\n\n        field.addEventListener(\"click\", () => {\n          const fieldPos: TField = [\n            parseInt(field.dataset.x!),\n            parseInt(field.dataset.y!),\n          ];\n          clickHandler(fieldPos);\n        });\n\n        field.classList.add(\"chessboard__field\");\n\n        board.appendChild(field);\n      }\n    }\n\n    //\n    parent.appendChild(container);\n    container.appendChild(gamePanel);\n    gamePanel.appendChild(stage1);\n    gamePanel.appendChild(board);\n    gamePanel.appendChild(stage2);\n    container.appendChild(settingsPanel);\n\n    const menu = new TabsView();\n    menu.init(settingsPanel);\n\n    //\n  }\n\n  public setUpBoard(board: IBoard): void {\n    for (let y = 1; y <= 8; y++) {\n      for (let x = 1; x <= 8; x++) {\n        const pos: TField = [x, y];\n        const figure = board.get(pos);\n        const field = this.getField(pos);\n        this.resetField(pos);\n        if (figure) {\n          const figureImage = this.getFigureImage(figure);\n          field.appendChild(figureImage);\n        }\n      }\n    }\n  }\n\n  private getFigureImage(figure: IFigure): HTMLElement {\n    const figureImg = document.createElement(\"img\");\n\n    //Map figure to file name\n    const file = figure.color + figure.name;\n\n    figureImg.setAttribute(\"src\", `./static/assets/pieces/kosal/${file}.svg`);\n    figureImg.setAttribute(\"alt\", `${figure.color} ${figure.name}`);\n\n    figureImg.classList.add(\"chessboard__figure\");\n\n    return figureImg;\n  }\n\n  private resetField(pos: TField): void {\n    const field = this.getField(pos);\n    field.innerHTML = \"\";\n    field.classList.value = \"\";\n    field.classList.add(\"chessboard__field\");\n  }\n\n  public setFigureOnField(pos: TField, figure: IFigure, enemyField?:TField): void {\n    const field = this.getField(pos);\n    //\n\n    if(enemyField){\n      const enemyFieldPos = this.getField(enemyField)\n      if (enemyFieldPos.hasChildNodes()) {\n        const figureSrc = enemyFieldPos.children[0].attributes[0].value;\n        const figureType = figureSrc.slice(\n          figureSrc.length - 6,\n          figureSrc.length - 4\n        );\n  \n        let figType = figureType[1];\n        const color =\n          figure.color === EColor.White ? \"last-of-type\" : \"first-of-type\";\n  \n        const figSymbol = document.querySelector<HTMLElement>(\n          `.stage:${color} > .game__stage>.figures__list > .chessboard__figure__stage.${figType}`\n        )!;\n        figSymbol.style.filter = \"invert(0)\";\n        console.log(figSymbol);\n        figSymbol.classList.remove(`${figType}`);\n      }\n      const figureImage = this.getFigureImage(figure);\n      field.innerHTML = \"\";\n      field.appendChild(figureImage);\n    }else{\n      if (field.hasChildNodes()) {\n        const figureSrc = field.children[0].attributes[0].value;\n        const figureType = figureSrc.slice(\n          figureSrc.length - 6,\n          figureSrc.length - 4\n        );\n  \n        let figType = figureType[1];\n        const color =\n          figure.color === EColor.White ? \"last-of-type\" : \"first-of-type\";\n  \n        const figSymbol = document.querySelector<HTMLElement>(\n          `.stage:${color} > .game__stage>.figures__list > .chessboard__figure__stage.${figType}`\n        )!;\n        figSymbol.style.filter = \"invert(0)\";\n        console.log(figSymbol);\n        figSymbol.classList.remove(`${figType}`);\n      }\n      const figureImage = this.getFigureImage(figure);\n      field.innerHTML = \"\";\n      field.appendChild(figureImage);\n\n    }\n\n    //\n\n\n  }\n\n  public getField(pos: TField): Element {\n    const field = document.querySelector(\n      `[data-x=\"${pos[0]}\"][data-y=\"${pos[1]}\"]`\n    )!;\n\n    return field;\n  }\n  public move(start: TField, end: TField, figure: IFigure, enemyField?: TField): void {\n    if(enemyField){\n      this.setFigureOnField(end, figure, enemyField)\n    }else{\n      this.setFigureOnField(end, figure);\n    }\n    \n    this.resetField(start);\n    if(enemyField){\n      this.resetField(enemyField);\n    }\n    this.resetStyles();\n  }\n\n  public setAsPossibleToMove(pos: TField): void {\n    const field = this.getField(pos);\n    const radioButton: HTMLInputElement = document.getElementById('possible move')! as HTMLInputElement\n    if(radioButton.checked){\n      field.classList.add(\"chessboard__field--possible_move\");\n    }\n\n  }\n\n  public setAsPossibleToAttack(pos: TField): void {\n    const field = this.getField(pos);\n    const radioButton: HTMLInputElement = document.getElementById('possible move')! as HTMLInputElement\n    if(radioButton.checked){\n      field.classList.add(\"chessboard__field--possible_attack\");\n    }\n  }\n\n  public setAsSelected(pos: TField): void {\n    const field = this.getField(pos);\n    field.classList.add(\"chessboard__field--selected\");\n  }\n\n  public resetStyles() {\n    const fields = document.querySelectorAll(\".chessboard__field\");\n    fields.forEach((field) => {\n      field.classList.value = \"\";\n      field.classList.add(\"chessboard__field\");\n    });\n  }\n  public timeDisplay(time: number, color: EColor) {\n    const nthChild = color === EColor.White ? 3 : 1;\n\n    const timer = document.querySelector(\n      `.stage:nth-child(${nthChild}) > .time`\n    )!;\n    const min = Math.floor(time / 60);\n    const sec = time % 60;\n\n    const appendZeroIfNeeded = (timeUnit: number): string =>\n      (\"\" + timeUnit).length === 1 ? `0${timeUnit}` : timeUnit.toString();\n\n    timer.innerHTML = `${appendZeroIfNeeded(min)}:${appendZeroIfNeeded(sec)} min`;\n  }\n  public getStartTime(time: number) {\n    const startTime = document.querySelector(\".time\")!;\n    startTime.innerHTML = time + \"\";\n  }\n}\n\n","import BoardModel from \"../Models/boardModel\";\nimport BoardView from \"../Views/boardView\";\n\nimport SaveOfCastling from \"../Models/savesModels/saveOfCastling\";\nimport SaveOfMove from \"../Models/savesModels/saveOfMove\";\nimport { EColor, EFigureType, IFigure, TField } from \"../Models/pieces/figureInterface\";\n\nexport class MoveSaver {\n    public moves: (SaveOfMove | SaveOfCastling)[];\n\n    constructor() {\n        this.moves = [];\n    }\n\n    public canUndoMove(): boolean{\n        return this.moves.length > 0;\n    }\n\n    public addMove(move: (SaveOfMove | SaveOfCastling)): void {\n        this.moves.push(move);\n    }\n\n    public addCastling(castling: SaveOfCastling): void {\n        this.moves.push(castling);\n    }\n\n    public revertLastMove(model: BoardModel, view: BoardView): void {\n        const lastMove = this.moves.pop();\n        if (lastMove) {\n            lastMove.revert(model, view);\n        }\n    }\n\n    public reset(): void {\n        this.moves = [];\n    }\n\n    public isEnPassantPossible(figure:IFigure, position: TField, board: BoardModel): Array<Array<number> | string>{\n\n\n    const result:Array<Array<number> | string> = [];\n    const resultingField = [];\n    const isPawn = figure.name === EFigureType.Pawn;\n    if(!isPawn){\n        return result\n    }\n    const [x,y] = position\n    const leftFigure: TField = [x-1, y];\n    const rightFigure: TField = [x+1, y];\n    const isLeftFigure = board.get(leftFigure);\n    const isRightFigure = board.get(rightFigure);\n    const isLeftPawn = isLeftFigure?.name===EFigureType.Pawn;\n    const isRightPawn = isRightFigure?.name===EFigureType.Pawn;\n\n\n    if(this.moves.length<1){return result};\n    const lastMove= this.moves[this.moves.length-1] as SaveOfMove;\n    if(lastMove.getLastMove){\n        if(isLeftPawn){\n            const { from, to, moveFor } = lastMove.getLastMove();\n            if(moveFor===EColor.Black){\n                const isTo = to[0]===leftFigure[0] && to[1]===leftFigure[1]\n                const isFrom = from[0]===leftFigure[0]&& from[1]===leftFigure[1]+2;\n                if(isTo && isFrom){\n                    resultingField.push(x-1);\n                    resultingField.push(y+1);\n                    result.push(resultingField);\n                    result.push('lb')\n                    return result\n                }\n            }else if(moveFor===EColor.White){\n                const isTo = to[0]===leftFigure[0] && to[1]===leftFigure[1]\n                const isFrom = from[0]===leftFigure[0]&& from[1]===leftFigure[1]-2;\n                if(isTo && isFrom){\n                    resultingField.push(x-1);\n                    resultingField.push(y-1);\n                    result.push(resultingField);\n                    result.push('lw')\n                    return result\n                }\n            }\n\n        }else if (isRightPawn){\n            const { from, to, moveFor } = lastMove.getLastMove();\n            if(moveFor===EColor.Black){\n                const isTo = to[0]===rightFigure[0] && to[1]===rightFigure[1];\n                const isFrom = from[0]===rightFigure[0] && from[1]===rightFigure[1]+2\n                if(isTo && isFrom){\n                    resultingField.push(x+1);\n                    resultingField.push(y+1);\n                    result.push(resultingField);\n                    result.push('rb')\n                    return result\n                }\n            }else if (moveFor===EColor.White){\n                const isTo = to[0]===rightFigure[0] && to[1]===rightFigure[1];\n                const isFrom = from[0]===rightFigure[0] && from[1]===rightFigure[1]-2;\n                if(isTo && isFrom){\n                    resultingField.push(x+1);\n                    resultingField.push(y-1);\n\n                    result.push(resultingField);\n                    result.push('rw')\n                    return result\n                }\n            }\n\n        }\n    }\n\nreturn result;\n\n    }\n}","import MovesInterface from \"./movesInterface\";\n\nexport default class MovesList implements MovesInterface {\n  public init(lastMove: string) {\n    const movesTab = document.getElementById(\"last__move__info\")!;\n    const info = document.createElement(\"div\");\n    movesTab.appendChild(info);\n    info.classList.add(\"info\");\n    info.innerHTML = lastMove;\n\n    const countChildren = document.querySelector(\"#last__move__info\")!.childElementCount;\n    if (countChildren > 6) {\n      const firstChild = document.querySelector(\"#last__move__info> .info:first-child\")!;\n      firstChild.remove();\n    }\n  }\n}\n","import IEndGame from \"./endGameInterface\";\n\nexport default class EndGame implements IEndGame {\n    parent: HTMLElement;\n    constructor(parent: HTMLElement) {\n        this.parent = parent;\n    };\n\n    createElement(tag: string, className?: string) {\n        const element = document.createElement(tag);\n        if (className) {\n            element.classList.add(className);\n        }\n        return element;\n    };\n\n    createWiner(winerColor: string){\n        const div_btn = this.createElement('div', 'buttonBox');\n        const box_reset = this.createElement('button', 'buttonBox__reset');\n        box_reset.setAttribute('id', 'buttonBox__reset');\n        const box_text = this.createElement('div', 'buttonBox__text');\n        box_text.innerText = `The winer is: ${winerColor}!`;\n        const box_text_reset = this.createElement('button', 'buttonBox__text--reset');\n        box_text_reset.innerText = \"PLAY AGAIN\";\n        box_text_reset.setAttribute('id', 'buttonBox__text--reset');\n\n        box_text.appendChild(box_text_reset);\n        div_btn.appendChild(box_reset);\n        this.parent.append(div_btn, box_text);\n\n        this.createBtnListener();\n    };\n\n    private createBtnListener(){\n        const btn_reset = document.getElementById('buttonBox__reset');\n        const btn_text_reset = document.getElementById('buttonBox__text--reset');\n        btn_reset?.addEventListener('click', () => {\n            location.reload();\n        });\n        btn_text_reset?.addEventListener('click', () => {\n            location.reload();\n        });\n    };\n\n}","import BoardModel from \"../Models/boardModel\";\nimport {\n  EColor,\n  TField,\n  IFigure,\n  EFigureType,\n} from \"../Models/pieces/figureInterface\";\nimport SaveOfCastling from \"../Models/savesModels/saveOfCastling\";\nimport SaveOfMove from \"../Models/savesModels/saveOfMove\";\nimport BoardView from \"../Views/boardView\";\nimport { MoveSaver } from \"./moveSaver\";\nimport MovesList from \"../Views/movesList\";\n\nimport { time } from \"console\";\nimport { QueenModel } from \"../Models/pieces\";\n\nimport EndGame from \"../Views/endGameView\";\n\n\nexport default class BoardController {\n  private view: BoardView;\n  private board!: BoardModel;\n  private selectedField!: TField | null;\n  private movesForSelected!: TField[];\n  private attacksForSelected!: TField[];\n  private moveFor!: EColor;\n  private timeLeftForBlack!: number;\n  private timeLeftForWhite!: number;\n  private timer!: NodeJS.Timeout;\n  private moveSaver: MoveSaver;\n\n  constructor(parent: HTMLElement) {\n    this.view = new BoardView();\n    this.view.init(parent, this.clickOnField);\n\n    this.moveSaver = new MoveSaver();\n  }\n\n  //Starts new game\n  public newGame(time: number): void {\n    //reset constroller\n    this.moveFor = EColor.White;\n    this.selectedField = null;\n    this.movesForSelected = [];\n    this.attacksForSelected = [];\n    this.timeLeftForWhite = time;\n    this.timeLeftForBlack = time;\n\n    //reset saved moves\n    this.moveSaver.reset();\n\n    //make new board model\n    this.board = new BoardModel();\n\n    //set up board\n    this.setUpBoard(this.board);\n\n    //start timer\n    this.setUpTimer();\n    if (+process.env.DEBUG!) console.log(`NEW GAME STARTS`);\n\n  }\n\n  public addEventListenerToButton() {\n    \n    this.view.timeDisplay(5*60, EColor.White);\n    this.view.timeDisplay(5*60, EColor.Black);\n    const btnBox = document.getElementById(\"menu__button--start\")!;\n    const timeElement = document.getElementById(\"range\");\n\n    btnBox.addEventListener(\"click\", (e) => {\n      let timeValue = parseInt((<HTMLInputElement>document.getElementById(\"range\"))\n      .value);\n      console.log(timeValue)\n      this.view.timeDisplay(timeValue*60, EColor.White);\n      this.view.timeDisplay(timeValue*60, EColor.Black);\n      this.newGame(timeValue * 60);\n      this.view.timeDisplay(timeValue*60, EColor.White);\n      this.view.timeDisplay(timeValue*60, EColor.Black);\n    });\n\n    timeElement?.addEventListener(\"change\", (e) => {\n      let timeValue = parseInt((<HTMLInputElement>document.getElementById(\"range\"))\n        .value);\n\n      this.view.timeDisplay(timeValue*60, EColor.White);\n      this.view.timeDisplay(timeValue*60, EColor.Black);\n\n      btnBox.addEventListener(\"click\", (e) => {\n        if (!timeValue || timeValue === 0) {\n          timeValue = 5;\n        };\n        this.view.timeDisplay(timeValue*60, EColor.White);\n        this.view.timeDisplay(timeValue*60, EColor.Black);\n      });\n\n    });\n  }\n\n  //  Moves and attacks functions\n\n  //check if given position is on given list\n  private isFieldOnList(pos: TField, list: TField[]): boolean {\n    return !list.every((elem) => elem[0] !== pos[0] || elem[1] !== pos[1]);\n  }\n\n  //select Figure on given position\n  private selectNewFigure(pos: TField): void {\n    this.view.resetStyles();\n\n    //checks moves avaible for figure on given position\n    this.selectedField = pos;\n    this.movesForSelected = this.board.possibleMovesFor(this.selectedField);\n    this.attacksForSelected = this.board.possibleAttacksFor(\n      this.selectedField,\n      this.moveSaver\n    );\n\n    //allow attack if it not cause 'check'\n    this.attacksForSelected = this.attacksForSelected.filter((attack) => {\n      return this.board.simulateMove(this.moveFor, pos, attack);\n    });\n\n    //mark figure on given position as selected\n    this.view.setAsSelected(pos);\n    const figure = this.board.get(pos)!;\n\n    //check for castling\n    if (figure.name === EFigureType.King) {\n      const row = this.moveFor === EColor.White ? 1 : 8;\n      if (this.canMakeCasting(this.moveFor, true))\n        this.movesForSelected.push([7, row]);\n      if (this.canMakeCasting(this.moveFor, false))\n        this.movesForSelected.push([2, row]);\n    }\n\n    //display on board positions avaible to move and attack\n    this.movesForSelected.forEach((field) => {\n      this.view.setAsPossibleToMove(field);\n    });\n    this.attacksForSelected.forEach((field) => {\n      this.view.setAsPossibleToAttack(field);\n    });\n  }\n\n  //cancel selection\n  private resetSelectedFigure() {\n    this.view.resetStyles();\n    this.selectedField = null;\n    this.movesForSelected = [];\n    this.attacksForSelected = [];\n  }\n\n  //Move given figure from start position to end position\n  private makeMove(start: TField, end: TField, figure: IFigure): void {\n    // this.moveSaver.isEnPeasantPossible();\n\n    //Save move\n    const savedMove = new SaveOfMove(figure.color, figure, start, end);\n    this.moveSaver.addMove(savedMove);\n\n    //move\n    this.view.move(start, end, figure);\n    this.board.move(start, end);\n\n    //print move\n    console.log(savedMove.printMove());\n\n    //moves list\n\n    const lastMove = savedMove.printMove();\n    const movesList = new MovesList();\n    movesList.init(lastMove);\n\n    //\n\n    //change turn\n    this.changeTurn();\n  }\n  \n\n  //Attack given figure on end position by given figure on start position\n  private makeAttack(start: TField, end: TField, figure: IFigure): void {\n\n    let enemyFigure = this.board.get(end);\n    let enemyField: TField = end;\n    if (enemyFigure === null) {\n      if (figure.color === EColor.White) {\n        enemyField = [end[0], end[1] - 1] as TField;\n        enemyFigure = this.board.get(enemyField)!;\n        this.board.resetField(enemyField);\n      } else {\n        enemyField = [end[0], end[1] + 1] as TField;\n        enemyFigure = this.board.get(enemyField)!;\n        this.board.resetField(enemyField);\n      }\n\n      //save attack\n      const savedAttack = new SaveOfMove(\n        figure.color,\n        figure,\n        start,\n        end,\n        enemyFigure,\n        enemyField\n      );\n      this.moveSaver.addMove(savedAttack);\n\n      //attack\n      this.view.move(start, end, figure, enemyField);\n      this.board.move(start, end);\n\n      this.board.resetField(enemyField);\n\n      //moves list\n\n      const lastMove = savedAttack.printMove();\n      const movesList = new MovesList();\n      movesList.init(lastMove);\n\n      //\n\n      //change turn\n      this.changeTurn();\n    }else {\n      //save attack\n      const savedAttack = new SaveOfMove(\n        figure.color,\n        figure,\n        start,\n        end,\n        enemyFigure\n      );\n      this.moveSaver.addMove(savedAttack);\n\n      //attack\n      this.view.move(start, end, figure);\n      this.board.move(start, end);\n\n      //moves list\n\n      const lastMove = savedAttack.printMove();\n      const movesList = new MovesList();\n      movesList.init(lastMove);\n\n      //\n\n      //change turn\n      this.changeTurn();\n    }\n  }\n\n  //Handler for clicking on field\n  private clickOnField = (pos: TField): void => {\n    if (this.selectedField) {\n      //We have selected figure already\n      this.figureAlreadySelected(pos, this.selectedField);\n    } else {\n      //We didn't select figure yet\n      this.figureNotSelected(pos);\n    }\n  };\n\n  //Help function for clickOnField()\n  private figureNotSelected(pos: TField): void {\n    //get clicked position\n    const figure = this.board.get(pos);\n\n    //if we clicked on figure select this field\n    if (figure && figure.color === this.moveFor) {\n      this.selectNewFigure(pos);\n    }\n    //otherwise do nothing\n  }\n\n  //Help function for clickOnField()\n  private figureAlreadySelected(clickedPos: TField, selectedPos: TField): void {\n    //get clicked field\n    const clickedFigure = this.board.get(clickedPos);\n\n    //get already clicked figure\n    const figure = this.board.get(selectedPos);\n\n    //check if we clicked figure\n    if (clickedFigure && figure) {\n      //check if it is our figure\n      if (clickedFigure.color === figure.color) {\n        //It is our figure so select new one\n        this.selectNewFigure(clickedPos);\n        return;\n      } else {\n        //it is enemy figure\n        //check if this figure is in renge already selected figure\n        if (this.isFieldOnList(clickedPos, this.attacksForSelected)) {\n          //It is so we can perform attack\n          this.makeAttack(selectedPos, clickedPos, figure);\n        }\n      }\n      //check if we clicked on field we can move\n    } else if (\n      figure &&\n      this.isFieldOnList(clickedPos, this.movesForSelected)\n    ) {\n      //we clicked empty field\n      //we can move on this field\n\n      //check for king\n      if (figure.name === EFigureType.King && !figure.isMoved) {\n        //check if it is field for castling\n        const row = this.moveFor === EColor.White ? 1 : 8;\n        if (clickedPos[0] === 7 && clickedPos[1] === row) {\n          //king side castling\n          this.makeCastling(this.moveFor, true);\n        } else if (clickedPos[0] === 2 && clickedPos[1] === row) {\n          //queen side castling\n          this.makeCastling(this.moveFor, false);\n        } else {\n          //normal move\n          this.makeMove(selectedPos, clickedPos, figure);\n        }\n      } else {\n        //normal move\n        this.makeMove(selectedPos, clickedPos, figure);\n      }\n    } else if (\n      figure &&\n      this.isFieldOnList(clickedPos, this.attacksForSelected)\n    ) {\n      this.makeAttack(selectedPos, clickedPos, figure);\n    }\n    this.resetSelectedFigure();\n  }\n\n  //Make castling, should be used only if canMakeCastling gives true for same parameters\n  private makeCastling(color: EColor, kingSide: boolean) {\n    //save castling\n    const savedMove = new SaveOfCastling(color, kingSide);\n    this.moveSaver.addMove(savedMove);\n\n    const row = color === EColor.White ? 1 : 8;\n\n    const initKingPos: TField = [5, row];\n    const initRookPos: TField = kingSide ? [8, row] : [1, row];\n\n    const newKingPos: TField = kingSide ? [7, row] : [2, row];\n    const newRookPos: TField = kingSide ? [6, row] : [3, row];\n\n    const king = this.board.get(initKingPos)!;\n    const rook = this.board.get(initRookPos)!;\n\n    //move king\n    this.view.move(initKingPos, newKingPos, king);\n    this.board.move(initKingPos, newKingPos);\n    king.move();\n\n    //move rook\n    this.view.move(initRookPos, newRookPos, rook);\n    this.board.move(initRookPos, newRookPos);\n    rook.move();\n\n    //change turn for enemy\n    this.changeTurn();\n\n    //display last move\n    const lastMove = savedMove.printMove();\n    const movesList = new MovesList();\n    movesList.init(lastMove);\n  }\n\n  //Check if castling can be performed\n  private canMakeCasting(color: EColor, kingSide: boolean): boolean {\n    //Select row for king\n    const row = color === EColor.White ? 1 : 8;\n    //select king figure\n    const king = this.board.get([5, row]);\n    if (king && !king.isMoved) {\n      if (kingSide) {\n        //check king side castling\n        if (this.board.get([6, row])) return false;\n        if (this.board.get([7, row])) return false;\n        const rook = this.board.get([8, row]);\n        if (rook && !rook.isMoved) return true;\n      } else {\n        //check queen side castling\n        if (this.board.get([4, row])) return false;\n        if (this.board.get([3, row])) return false;\n        if (this.board.get([2, row])) return false;\n        const rook = this.board.get([1, row]);\n        if (rook && !rook.isMoved) return true;\n      }\n    }\n    return false;\n  }\n\n  //  Game functions\n\n  //display board for given model\n  private setUpBoard(board: BoardModel): void {\n    this.view.setUpBoard(board);\n  }\n\n  // set up new timer\n  private setUpTimer() {\n    this.timer = setInterval(this.updateTime, 1000);\n  }\n\n\n  public stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  //handler for timer\n  private updateTime = (): void => {\n    if (this.moveFor === EColor.White) {\n      this.timeLeftForWhite -= 1;\n      if (this.timeLeftForWhite <= 0) {\n        this.gameOver(EColor.Black);\n        return;\n      }\n\n      this.view.timeDisplay(this.timeLeftForWhite, this.moveFor);\n      if (+process.env.DEBUG! && +process.env.DEBUG_TIMER!) {\n\n        console.log(`Left time for White: ${this.timeLeftForWhite}sec`);\n    }} else {\n      this.timeLeftForBlack -= 1;\n      if (this.timeLeftForBlack <= 0) {\n        this.gameOver(EColor.White);\n        return;\n      }\n\n      this.view.timeDisplay(this.timeLeftForBlack, this.moveFor);\n\n      if (+process.env.DEBUG! && +process.env.DEBUG_TIMER!)\n        console.log(`Left time for Black: ${this.timeLeftForBlack}sec`);\n    }\n  };\n\n  //change turn for enemy player\n  private changeTurn() {\n    const nextMoveFor =\n      this.moveFor === EColor.White ? EColor.Black : EColor.White;\n    if (this.board.isCheckMate(nextMoveFor)) this.gameOver(this.moveFor);\n    this.moveFor = nextMoveFor;\n  }\n\n  //handler for 'undo' last move\n  public undoMove = () => {\n    if (this.moveSaver.canUndoMove()) {\n      this.moveSaver.revertLastMove(this.board, this.view);\n      this.moveFor =\n        this.moveFor === EColor.White ? EColor.Black : EColor.White;\n      this.resetSelectedFigure();\n    }\n  };\n\n  //game over handler\n  private gameOver(winer: EColor) {\n    this.stopTimer();\n    let winerColor = '';\n    if (winer === 'b') {\n      winerColor = \"BLACK\"\n      } else {\n      winerColor = \"WHITE\"\n    };\n    const root = document.getElementById('root')!;\n    const end = new EndGame(root);\n\n    end.createWiner(winerColor);\n  };\n}\n","import BoardController from \"./Controllers/boardController\";\n\nexport default function App(): void {\n    if (+process.env.DEBUG!) console.log('Start Chess App...');\n    const root = document.getElementById('root')!;\n\n    const controller = new BoardController(root);\n    const revertBtn = document.createElement('button');\n    revertBtn.addEventListener('click', controller.undoMove);\n    revertBtn.addEventListener('click', ()=>{\n        const lastRecord = document.getElementById('last__move__info')?.lastChild;\n        if(lastRecord){\n            lastRecord.remove()\n        }\n    })\n    revertBtn.innerHTML = 'UNDO';\n    revertBtn.classList.add('revert__button');\n\n    const element =  document.getElementById('undo__button__container')!;\n    element.appendChild(revertBtn);\n\n    controller.addEventListenerToButton();\n}","import App from './App/App';\n\nApp();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}